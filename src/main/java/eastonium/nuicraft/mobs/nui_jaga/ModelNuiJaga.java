package eastonium.nuicraft.mobs.nui_jaga;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.MathHelper;

public class ModelNuiJaga extends ModelBase
{
  //fields
    ModelRenderer ArmL;
    ModelRenderer ArmR;
    ModelRenderer Tail1;
    ModelRenderer Tail2;
    ModelRenderer Tail3;
    ModelRenderer LegL1;
    ModelRenderer LegL2;
    ModelRenderer LegL3;
    ModelRenderer LegR1;
    ModelRenderer LegR2;
    ModelRenderer LegR3;
    ModelRenderer Body;
    ModelRenderer HandL;
    ModelRenderer HandR;
    ModelRenderer Sting;
    ModelRenderer Head1;
    ModelRenderer Head2;
    ModelRenderer EyeR;
    ModelRenderer EyeL;
    ModelRenderer Tooth11;
    ModelRenderer Tooth12;
    ModelRenderer Tooth21;
    ModelRenderer Tooth22;
    ModelRenderer Tooth31;
    ModelRenderer Tooth32;
    ModelRenderer Jaw;
  
  public ModelNuiJaga()
  {
    textureWidth = 128;
    textureHeight = 128;
    setTextureOffset("LegL1.1LegL1", 40, 0);
    setTextureOffset("LegL1.2LegL1", 48, 0);
    setTextureOffset("LegL1.3LegL1", 0, 18);
    setTextureOffset("LegL2.1LegL2", 40, 0);
    setTextureOffset("LegL2.2LegL2", 48, 0);
    setTextureOffset("LegL2.3LegL2", 0, 18);
    setTextureOffset("LegL3.1LegL3", 40, 0);
    setTextureOffset("LegL3.2LegL3", 48, 0);
    setTextureOffset("LegL3.3LegL3", 0, 18);
    setTextureOffset("LegR1.1LegR1", 40, 0);
    setTextureOffset("LegR1.2LegR1", 48, 0);
    setTextureOffset("LegR1.3LegR1", 0, 18);
    setTextureOffset("LegR2.1LegR2", 40, 0);
    setTextureOffset("LegR2.2LegR2", 48, 0);
    setTextureOffset("LegR2.3LegR2", 0, 18);
    setTextureOffset("LegR3.1LegR3", 40, 0);
    setTextureOffset("LegR3.2LegR3", 48, 0);
    setTextureOffset("LegR3.3LegR3", 0, 18);
    setTextureOffset("Body.BodyBase", 0, 52);
    setTextureOffset("Body.BodyAngleL1", 0, 22);
    setTextureOffset("Body.BodyAngleL2", 0, 22);
    setTextureOffset("Body.BodyAngleL3", 0, 22);
    setTextureOffset("Body.BodyAngleR1", 0, 22);
    setTextureOffset("Body.BodyAngleR2", 0, 22);
    setTextureOffset("Body.BodyAngleR3", 0, 22);
    setTextureOffset("Body.BodyBase1", 0, 32);
    setTextureOffset("Body.BodyBase2", 0, 32);
    setTextureOffset("Body.BodyBase3", 0, 44);
    setTextureOffset("HandL.BaseL", 0, 73);
    setTextureOffset("HandL.MaskL", 0, 0);
    setTextureOffset("HandR.BaseR", 0, 73);
    setTextureOffset("HandR.MaskR", 0, 0);
    setTextureOffset("Sting.Sting1", 35, 116);
    setTextureOffset("Sting.Sting2", 40, 108);
    
      ArmL = new ModelRenderer(this, 0, 28);
      ArmL.addBox(0F, -1F, -1F, 16, 2, 2);
      ArmL.setRotationPoint(4F, 18F, -11F);
      ArmL.setTextureSize(128, 128);
      ArmL.mirror = false;
      setRotation(ArmL, 0F, 0.5235988F, 0F);
      ArmR = new ModelRenderer(this, 0, 28);
      ArmR.addBox(-16F, -1F, -1F, 16, 2, 2);
      ArmR.setRotationPoint(-4F, 18F, -11F);
      ArmR.setTextureSize(128, 128);
      ArmR.mirror = false;
      setRotation(ArmR, 0F, -0.5235988F, 0F);
      Tail1 = new ModelRenderer(this, 0, 108);
      Tail1.addBox(-3F, -10F, -1F, 4, 10, 2);
      Tail1.setRotationPoint(1F, 18F, 9F);
      Tail1.setTextureSize(128, 128);
      Tail1.mirror = true;
      setRotation(Tail1, -0.968193F, 0F, 0F);
      Tail2 = new ModelRenderer(this, 0, 108);
      Tail2.addBox(-2F, -10F, -14F, 2, 2, 15);
      Tail2.setRotationPoint(1F, 18F, 9F);
      Tail2.setTextureSize(128, 128);
      Tail2.mirror = true;
      setRotation(Tail2, -0.958382F, 0F, 0F);
      Tail3 = new ModelRenderer(this, 22, 108);
      Tail3.addBox(-1F, -18F, -6F, 2, 2, 6);
      Tail3.setRotationPoint(0F, 18F, 9F);
      Tail3.setTextureSize(128, 128);
      Tail3.mirror = true;
      setRotation(Tail3, 0F, 0F, 0F);
    LegL1 = new ModelRenderer(this, "LegL1");
    LegL1.setRotationPoint(6F, 19F, -4F);
    setRotation(LegL1, 0F, 0.2617994F, 0.4363323F);
    LegL1.mirror = true;
      LegL1.addBox("1LegL1", 12F, -1F, -1F, 2, 2, 2);
      LegL1.addBox("2LegL1", 9.5F, -0.5F, -0.5F, 3, 1, 1);
      LegL1.addBox("3LegL1", 0F, -1F, -1F, 10, 2, 2);
    LegL2 = new ModelRenderer(this, "LegL2");
    LegL2.setRotationPoint(6F, 19F, 0F);
    setRotation(LegL2, 0F, 0F, 0.4363323F);
    LegL2.mirror = true;
      LegL2.addBox("1LegL2", 12F, -1F, -1F, 2, 2, 2);
      LegL2.addBox("2LegL2", 9.5F, -0.5F, -0.5F, 3, 1, 1);
      LegL2.addBox("3LegL2", 0F, -1F, -1F, 10, 2, 2);
    LegL3 = new ModelRenderer(this, "LegL3");
    LegL3.setRotationPoint(6F, 19F, 4F);
    setRotation(LegL3, 0F, -0.2617994F, 0.4363323F);
    LegL3.mirror = true;
      LegL3.addBox("1LegL3", 12F, -1F, -1F, 2, 2, 2);
      LegL3.addBox("2LegL3", 9.5F, -0.5F, -0.5F, 3, 1, 1);
      LegL3.addBox("3LegL3", 0F, -1F, -1F, 10, 2, 2);
    LegR1 = new ModelRenderer(this, "LegR1");
    LegR1.setRotationPoint(-6F, 19F, -4F);
    setRotation(LegR1, 0F, -0.2617994F, -0.4363323F);
    LegR1.mirror = true;
      LegR1.addBox("1LegR1", -14F, -1F, -1F, 2, 2, 2);
      LegR1.addBox("2LegR1", -12.5F, -0.5F, -0.5F, 3, 1, 1);
      LegR1.addBox("3LegR1", -10F, -1F, -1F, 10, 2, 2);
    LegR2 = new ModelRenderer(this, "LegR2");
    LegR2.setRotationPoint(-6F, 19F, 0F);
    setRotation(LegR2, 0F, 0F, -0.4363323F);
    LegR2.mirror = true;
      LegR2.addBox("1LegR2", -14F, -1F, -1F, 2, 2, 2);
      LegR2.addBox("2LegR2", -12.5F, -0.5F, -0.5F, 3, 1, 1);
      LegR2.addBox("3LegR2", -10F, -1F, -1F, 10, 2, 2);
    LegR3 = new ModelRenderer(this, "LegR3");
    LegR3.setRotationPoint(-6F, 19F, 4F);
    setRotation(LegR3, 0F, 0.2617994F, -0.4363323F);
    LegR3.mirror = true;
      LegR3.addBox("1LegR3", -14F, -1F, -1F, 2, 2, 2);
      LegR3.addBox("2LegR3", -12.5F, -0.5F, -0.5F, 3, 1, 1);
      LegR3.addBox("3LegR3", -10F, -1F, -1F, 10, 2, 2);
    Body = new ModelRenderer(this, "Body");
    Body.setRotationPoint(-3F, 16F, -8F);
    setRotation(Body, 0F, 0F, 0F);
    Body.mirror = true;
      Body.addBox("BodyBase", 0F, 0F, 2F, 6, 4, 17);
      Body.addBox("BodyAngleL1", 5F, 1F, 3F, 5, 4, 2);
      Body.addBox("BodyAngleL2", 5F, 1F, 7F, 5, 4, 2);
      Body.addBox("BodyAngleL3", 5F, 1F, 11F, 5, 4, 2);
      Body.addBox("BodyAngleR1", -4F, 1F, 3F, 5, 4, 2);
      Body.addBox("BodyAngleR2", -4F, 1F, 7F, 5, 4, 2);
      Body.addBox("BodyAngleR3", -4F, 1F, 11F, 5, 4, 2);
      Body.addBox("BodyBase1", -2F, 0F, -4F, 2, 3, 9);
      Body.addBox("BodyBase2", 6F, 0F, -4F, 2, 3, 9);
      Body.addBox("BodyBase3", 0F, 2F, -4F, 6, 2, 6);
    HandL = new ModelRenderer(this, "HandL");
    HandL.setRotationPoint(13F, 14F, -25F);
    setRotation(HandL, 0F, 0F, 0F);
    HandL.mirror = true;
      HandL.addBox("BaseL", 1F, 1F, 1F, 6, 4, 6);
      HandL.addBox("MaskL", 0F, 0F, 0F, 8, 5, 8);
    HandR = new ModelRenderer(this, "HandR");
    HandR.setRotationPoint(-21F, 14F, -25F);
    setRotation(HandR, 0F, 0F, 0F);
    HandR.mirror = true;
      HandR.addBox("BaseR", 1F, 1F, 1F, 6, 4, 6);
      HandR.addBox("MaskR", 0F, 0F, 0F, 8, 5, 8);
    Sting = new ModelRenderer(this, "Sting");
    Sting.setRotationPoint(0F, 0F, 0F);
    setRotation(Sting, 0F, 0F, 0F);
    Sting.mirror = true;
      Sting.addBox("Sting1", -2.5F, 0F, -3F, 5, 2, 9);
      Sting.addBox("Sting2", -1.5F, -1F, 0F, 3, 2, 6);
      Head1 = new ModelRenderer(this, 0, 83);
      Head1.addBox(0F, 0F, 0F, 6, 2, 4);
      Head1.setRotationPoint(-3F, 19F, -15F);
      Head1.setTextureSize(128, 128);
      Head1.mirror = true;
      setRotation(Head1, 0.6108652F, 0F, 0F);
      Head2 = new ModelRenderer(this, 0, 89);
      Head2.addBox(0F, 0F, 0F, 4, 2, 2);
      Head2.setRotationPoint(-2F, 20F, -16F);
      Head2.setTextureSize(128, 128);
      Head2.mirror = true;
      setRotation(Head2, 0.6108652F, 0F, 0F);
      EyeR = new ModelRenderer(this, 0, 14);
      EyeR.addBox(0F, 0F, 0F, 2, 1, 2);
      EyeR.setRotationPoint(-3F, 17F, -14F);
      EyeR.setTextureSize(128, 128);
      EyeR.mirror = true;
      setRotation(EyeR, 0.6108652F, 0F, 0F);
      EyeL = new ModelRenderer(this, 0, 14);
      EyeL.addBox(0F, 0F, 0F, 2, 1, 2);
      EyeL.setRotationPoint(1F, 17F, -14F);
      EyeL.setTextureSize(128, 128);
      EyeL.mirror = true;
      setRotation(EyeL, 0.6108652F, 0F, 0F);
      Tooth11 = new ModelRenderer(this, 0, 93);
      Tooth11.addBox(-1F, -1F, -7F, 2, 5, 2);
      Tooth11.setRotationPoint(0F, 20F, -11F);
      Tooth11.setTextureSize(128, 128);
      Tooth11.mirror = true;
      setRotation(Tooth11, -0.2617994F, -0.6108652F, 0F);
      Tooth12 = new ModelRenderer(this, 8, 93);
      Tooth12.addBox(-0.5F, 0F, -0.5F, 1, 7, 1);
      Tooth12.setRotationPoint(0F, 21F, -11F);
      Tooth12.setTextureSize(128, 128);
      Tooth12.mirror = true;
      setRotation(Tooth12, -1.48353F, -0.6108652F, 0F);
      Tooth21 = new ModelRenderer(this, 0, 93);
      Tooth21.addBox(-1F, -1F, -7F, 2, 5, 2);
      Tooth21.setRotationPoint(0F, 20F, -11F);
      Tooth21.setTextureSize(128, 128);
      Tooth21.mirror = true;
      setRotation(Tooth21, -0.2617994F, 0F, 0F);
      Tooth22 = new ModelRenderer(this, 8, 93);
      Tooth22.addBox(-0.5F, 0F, -0.5F, 1, 7, 1);
      Tooth22.setRotationPoint(0F, 21F, -11F);
      Tooth22.setTextureSize(128, 128);
      Tooth22.mirror = true;
      setRotation(Tooth22, -1.48353F, 0F, 0F);
      Tooth31 = new ModelRenderer(this, 0, 93);
      Tooth31.addBox(-1F, -1F, -7F, 2, 5, 2);
      Tooth31.setRotationPoint(0F, 20F, -11F);
      Tooth31.setTextureSize(128, 128);
      Tooth31.mirror = true;
      setRotation(Tooth31, -0.2617994F, 0.6108652F, 0F);
      Tooth32 = new ModelRenderer(this, 8, 93);
      Tooth32.addBox(-0.5F, 0F, -0.5F, 1, 7, 1);
      Tooth32.setRotationPoint(0F, 21F, -11F);
      Tooth32.setTextureSize(128, 128);
      Tooth32.mirror = true;
      setRotation(Tooth32, -1.48353F, 0.6108652F, 0F);
      Jaw = new ModelRenderer(this, 0, 101);
      Jaw.addBox(0F, 0F, 0F, 4, 2, 5);
      Jaw.setRotationPoint(-2F, 20F, -14F);
      Jaw.setTextureSize(128, 128);
      Jaw.mirror = true;
      setRotation(Jaw, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float par2, float par3, float par4, float par5, float par6, float par7)
  {
	 this.setRotationAngles(par2, par3, par4, par5, par6, par7, entity);
    ArmL.render(par7);
    ArmR.render(par7);
    Tail1.render(par7);
    Tail2.render(par7);
    Tail3.render(par7);
    LegL1.render(par7);
    LegL2.render(par7);
    LegL3.render(par7);
    LegR1.render(par7);
    LegR2.render(par7);
    LegR3.render(par7);
    Body.render(par7);
    HandL.render(par7);
    HandR.render(par7);
    Sting.render(par7);
    Head1.render(par7);
    Head2.render(par7);
    EyeR.render(par7);
    EyeL.render(par7);
    Tooth11.render(par7);
    Tooth12.render(par7);
    Tooth21.render(par7);
    Tooth22.render(par7);
    Tooth31.render(par7);
    Tooth32.render(par7);
    Jaw.render(par7);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity entity)
  {
      float f6 = -((float)Math.PI / 4F);
      this.LegL1.rotateAngleZ = -f6 * 0.65F;
      this.LegR1.rotateAngleZ = f6 * 0.65F;
      this.LegL2.rotateAngleZ = -f6 * 0.5F;
      this.LegR2.rotateAngleZ = f6 * 0.5F;
      this.LegL3.rotateAngleZ = -f6 * 0.65F;
      this.LegR3.rotateAngleZ = f6 * 0.65F;
      float f7 = -0.0F;
      float f8 = 0.3926991F;
      this.LegL1.rotateAngleY = f8 * 2.0F + f7;
      this.LegR1.rotateAngleY = -f8 * 2.0F - f7;
      this.LegL2.rotateAngleY = f7;
      this.LegR2.rotateAngleY = - f7;
      this.LegL3.rotateAngleY = -f8 * 2.0F + f7;
      this.LegR3.rotateAngleY = f8 * 2.0F - f7;
      float f9 = -(MathHelper.cos(par1 * 0.6662F * 2.0F + 0.0F) * 0.4F) * par2;
      float f10 = -(MathHelper.cos(par1 * 0.6662F * 2.0F + (float)Math.PI) * 0.4F) * par2;
      float f11 = -(MathHelper.cos(par1 * 0.6662F * 2.0F + ((float)Math.PI / 2F)) * 0.4F) * par2;
      float f12 = -(MathHelper.cos(par1 * 0.6662F * 2.0F + ((float)Math.PI * 3F / 2F)) * 0.4F) * par2;
      float f13 = Math.abs(MathHelper.sin(par1 * 0.6662F + 0.0F) * 0.4F) * par2;
      float f14 = Math.abs(MathHelper.sin(par1 * 0.6662F + (float)Math.PI) * 0.4F) * par2;
      float f15 = Math.abs(MathHelper.sin(par1 * 0.6662F + ((float)Math.PI / 2F)) * 0.4F) * par2;
      float f16 = Math.abs(MathHelper.sin(par1 * 0.6662F + ((float)Math.PI * 3F / 2F)) * 0.4F) * par2;
      this.LegL1.rotateAngleY += f9;
      this.LegR1.rotateAngleY += -f9;
      this.LegL2.rotateAngleY += ((f10+f11)/2);
      this.LegR2.rotateAngleY += -((f10+f11)/2);
      this.LegL3.rotateAngleY += f12;
      this.LegR3.rotateAngleY += -f12;
      this.LegL1.rotateAngleZ += f13;
      this.LegR1.rotateAngleZ += -f13;
      this.LegL2.rotateAngleZ += ((f14+f15)/2);
      this.LegR2.rotateAngleZ += -((f14+f15)/2);
      this.LegL3.rotateAngleZ += f16;
      this.LegR3.rotateAngleZ += -f16;
  }

}